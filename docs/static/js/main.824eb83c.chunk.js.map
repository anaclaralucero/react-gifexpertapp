{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAa,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAazC,OACI,sBAAMC,SATU,SAACC,GACzBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAKV,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAhBiB,SAACP,GAC9BF,EAAcE,EAAEQ,OAAOF,aAoBvBZ,EAAYe,WAAW,CACnBd,cAAce,IAAUC,KAAKC,Y,mCC3BnBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACxB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARtB,kBAWdM,GAXc,4CAAH,sDCCRO,EAAa,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,GAAGC,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAEjC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,yCAAf,UACR,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFSS,EAAU,SAAC,GAAc,IAAbrB,EAAY,EAAZA,SAAY,ECAT,SAAEA,GAAe,IAAD,EAEdlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAKGuB,EDrBkBK,CAAa5B,GAA9Ba,EAFyB,EAE9BN,KAAYe,EAFkB,EAElBA,QACf,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAoDlB,EAApD,OACCsB,GAAS,mBAAGJ,UAAU,mCAAb,qBAEX,qBAAKA,UAAU,YAAf,SAIJL,EAAOJ,KAAM,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEWFkB,EA1BM,WAAK,MAEU/C,mBAAS,CAAC,cAFpB,mBAElBgD,EAFkB,KAEPjD,EAFO,KAOtB,OAAQ,gCACJ,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAChC,uBACA,6BAEQiD,EAAWrB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SACIA,GAFCA,Y,MCXnB+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.824eb83c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory =({setCategories})=>{\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange =(e)=>{\nsetInputValue(e.target.value);\n    }\n    const handleSubmit =(e)=>{\ne.preventDefault();\nif(inputValue.trim().length>2){\n    setCategories(cats=>[inputValue,...cats]);\n    setInputValue('');\n}\n\n    }\n    return(\n        <form onSubmit={handleSubmit}>\n            <input \n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}></input>\n        </form>\n    )\n}\n\nAddCategory.prototypes={\n    setCategories:PropTypes.func.isRequired\n}"," export const getGifs = async(category) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9MoazFQwPL4AqwvLN3yVXTilnsed6A72`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map( img=>{\n        return{\n            id:img.id,\n            title:img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n   return gifs;\n}","import React from 'react';\nexport const GifGridItem =({id,title,url})=>{\n    console.log(id,title,url)\n    return(\n        <div className=\"card animate__animated animate__fadeIn\">\n<img src={url} alt={title}/>\n<p>{title}</p>\n        </div>\n    )\n}","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category})=>{\n\nconst {data:images,loading}= useFetchGifs(category);\n    return(\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\n        {loading&&<p className=\"animate__animated animate__flash\">Loading</p>}\n     \n       <div className=\"card-grid\">\n\n\n{\n   images.map ( img=>(\n        <GifGridItem\n        key={img.id}\n        {...img}/>\n    ))\n    \n}\n\n\n</div>\n        </>\n    )\n}","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                \n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}\n\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\nconst GifExpertApp = () =>{\n    //const categories =['One Punch', 'Samurai X', 'Dragon Ball'];\n const [categories,setCategories] = useState(['One Punch']);\n    //const handleApp = () =>{\n    //    setCategories([...categories, 'Hunter'])\n\n    //}\n    return (<div>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={setCategories}/>\n    <hr />\n    <ol>\n        {\n            categories.map (category=>(\n              <GifGrid\n              key={category}\n              category={\n                  category\n              }\n              />\n            ))\n        }\n    </ol>\n        </div>);\n\n}\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}